name: Build and Test
on: [push, pull_request]
jobs:
  build:
    name: Go CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [1.12, 1.13]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - name: Check out source
        uses: actions/checkout@v1
      - name: Install Linters
        run: "curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.21.0"
      - name: Build
        env:
          GO111MODULE: "on"
        run: go build ./...
      - name: Lint
        env:
          GO111MODULE: "on"
        run: |
          export PATH=${PATH}:$(go env GOPATH)/bin
          export GOPATH=$(go env GOPATH)
          golangci-lint run --build-tags "autopilotrpc chainrpc invoicesrpc routerrpc signrpc walletrpc watchtowerrpc wtclientrpc" --disable-all --deadline=10m --skip-files="mobile\\/.*generated\\.go" --enable=gofmt --enable=vet --enable=gosimple --enable=unconvert --enable=ineffassign --enable=unused
      - name: Unit Tests
        env:
          GO111MODULE: "on"
        run: |
          make ci-race
          make ci-race walletimpl=remotewallet
      - name: Integration Tests
        env:
          GO111MODULE: "on"
        run: |
          make ci-itest
          make ci-itest walletimpl=remotewallet
      - name: Cleanup
        env:
          LOG_FILES: "./lntest/itest/*.log"
        run: |
          echo "Uploading to termbin.com..."
          find $LOG_FILES | xargs -I{} sh -c "cat {} | nc termbin.com 9999 | xargs -r0 printf '{} uploaded to %s'"
          echo "Uploading to file.io..."
          tar -zcvO $LOG_FILES | curl -s -F 'file=@-;filename=logs.tar.gz' https://file.io | xargs -r0 printf 'logs.tar.gz uploaded to %s\n' 
